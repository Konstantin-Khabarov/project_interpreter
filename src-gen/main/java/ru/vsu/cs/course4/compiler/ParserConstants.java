/* Generated by: ParserGeneratorCC: Do not edit this line. ParserConstants.java */
package ru.vsu.cs.course4.compiler;


/**
 * Token literal values and constants.
 * Generated by com.helger.pgcc.output.java.OtherFilesGenJava#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WS = 1;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 2;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 3;
  /** RegularExpression Id. */
  int LETTER = 4;
  /** RegularExpression Id. */
  int DIGIT = 5;
  /** RegularExpression Id. */
  int INT_VALUE = 6;
  /** RegularExpression Id. */
  int FLOAT_VALUE = 7;
  /** RegularExpression Id. */
  int ESCAPE = 8;
  /** RegularExpression Id. */
  int CHAR_VALUE = 9;
  /** RegularExpression Id. */
  int STRING_VALUE = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int WHILE = 13;
  /** RegularExpression Id. */
  int FOR = 14;
  /** RegularExpression Id. */
  int DEF = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int RETURN = 18;
  /** RegularExpression Id. */
  int IDENT = 19;
  /** RegularExpression Id. */
  int COMMA = 20;
  /** RegularExpression Id. */
  int SEMI = 21;
  /** RegularExpression Id. */
  int LRNDBR = 22;
  /** RegularExpression Id. */
  int RRNDBR = 23;
  /** RegularExpression Id. */
  int LCURBR = 24;
  /** RegularExpression Id. */
  int RCURBR = 25;
  /** RegularExpression Id. */
  int PLUS = 26;
  /** RegularExpression Id. */
  int MINUS = 27;
  /** RegularExpression Id. */
  int STAR = 28;
  /** RegularExpression Id. */
  int SLASH = 29;
  /** RegularExpression Id. */
  int PERCENT = 30;
  /** RegularExpression Id. */
  int EQUALS = 31;
  /** RegularExpression Id. */
  int LBRACK = 32;
  /** RegularExpression Id. */
  int RBRACK = 33;
  /** RegularExpression Id. */
  int EXCLAM = 34;
  /** RegularExpression Id. */
  int INCREM = 35;
  /** RegularExpression Id. */
  int DECREM = 36;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WS>",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<LETTER>",
    "<DIGIT>",
    "<INT_VALUE>",
    "<FLOAT_VALUE>",
    "<ESCAPE>",
    "<CHAR_VALUE>",
    "<STRING_VALUE>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"def\"",
    "\"true\"",
    "\"false\"",
    "\"return\"",
    "<IDENT>",
    "\",\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\"[\"",
    "\"]\"",
    "\"!\"",
    "\"++\"",
    "\"--\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"&&\"",
    "\"||\"",
  };

}
